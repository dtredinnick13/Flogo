{
    "name": "BikeDemoV3",
    "description": " ",
    "version": "1.0.0",
    "type": "flogo:app",
    "appModel": "1.0.0",
    "feVersion": "2.5.0",
    "resources": [
        {
            "id": "flow:AntSensorHandler",
            "data": {
                "name": "AntSensorHandler",
                "description": "",
                "tasks": [
                    {
                        "id": "LogMessageAntMsg",
                        "name": "LogMessageAntMsg",
                        "activity": {
                            "ref": "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
                            "settings": {},
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['message']",
                                        "type": "expression",
                                        "value": "string.concat(\"received message from ant+: device type = \", string.tostring($flow.deviceType), \" message = \", $flow.message)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "Return",
                        "name": "Return",
                        "activity": {
                            "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
                            "settings": {},
                            "input": {
                                "mappings": ""
                            },
                            "output": {}
                        }
                    },
                    {
                        "id": "LogHeartratePgNo",
                        "name": "LogHeartratePgNo",
                        "activity": {
                            "ref": "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
                            "settings": {},
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['message']",
                                        "type": "expression",
                                        "value": "string.concat(\"Heartrate message received - page # \", string.substring($flow.message, 1, 1))"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "Return1",
                        "name": "Return1",
                        "activity": {
                            "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
                            "settings": {},
                            "input": {
                                "mappings": ""
                            },
                            "output": {}
                        }
                    },
                    {
                        "id": "DecodeHeartRate",
                        "name": "DecodeHeartRate",
                        "activity": {
                            "ref": "HexConverter/activity/hexConverter",
                            "settings": {},
                            "input": {
                                "hexBytes": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['hexBytes']",
                                        "type": "expression",
                                        "value": "string.substring($flow.message, 14, 2)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "MQTTPubHRMsg",
                        "name": "MQTTPubHRMsg",
                        "activity": {
                            "ref": "git.tibco.com/git/product/ipaas/wi-mqtt.git/Mqtt/activity/publish",
                            "settings": {},
                            "input": {
                                "Connection": {
                                    "id": "4c5c6570-75a8-11e9-be33-839ec085579d",
                                    "type": "flogo:connector",
                                    "version": "1.0.0",
                                    "name": "connection",
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "MQTT Connector",
                                    "description": "MQTT Connector",
                                    "ref": "git.tibco.com/git/product/ipaas/wi-mqtt.git/Mqtt/connector/connection",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Connection Name",
                                                "visible": true
                                            },
                                            "value": "LocalMQTT_1"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "visible": true
                                            },
                                            "value": "Local MQTT server"
                                        },
                                        {
                                            "name": "broker",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Broker URL",
                                                "visible": true,
                                                "Description": "Enter a broker URL in the form '<protocol>://<host>:<port>'"
                                            },
                                            "value": "tcp://192.168.118.65:1883"
                                        },
                                        {
                                            "name": "user",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Username",
                                                "visible": true,
                                                "Description": "Enter a username if this connection requires one"
                                            },
                                            "value": "dtredinnick"
                                        },
                                        {
                                            "name": "password",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Password",
                                                "visible": true,
                                                "type": "password",
                                                "encryptable": true,
                                                "Description": "Enter a password if this connection requires one"
                                            },
                                            "value": "SECRET:3iLDUqTH5pRybddCrOC6FgZIkrDbALMhcVqj+62b550Tw70="
                                        },
                                        {
                                            "name": "encryptionMode",
                                            "type": "string",
                                            "display": {
                                                "name": "Encryption Mode",
                                                "description": "Choose the type of authentication to use"
                                            },
                                            "allowed": [
                                                "None",
                                                "TLS-Cert",
                                                "TLS-ClientAuth"
                                            ],
                                            "value": "None"
                                        },
                                        {
                                            "name": "cacert",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Cacert",
                                                "description": "Select the CA certificate file used to sign the broker's certificate",
                                                "visible": false,
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".crt",
                                                    ".cert",
                                                    ".pem"
                                                ],
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "clientcert",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Client Cert",
                                                "description": "Select the client certificate file for connections requiring client auth",
                                                "visible": false,
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".crt",
                                                    ".cert",
                                                    ".pem"
                                                ],
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "clientkey",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Client Key",
                                                "description": "Select the client key file used for connections requiring client auth",
                                                "visible": false,
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".key",
                                                    ".pem"
                                                ],
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "Tibco",
                                    "key": "Tibco/Mqtt/connector/connection/connector.json",
                                    "display": {
                                        "description": "MQTT Connector",
                                        "category": "Mqtt",
                                        "smallIcon": "icons/mqtt.png",
                                        "largeIcon": "icons/mqtt.png",
                                        "visible": true
                                    },
                                    "actions": [
                                        {
                                            "name": "Save"
                                        }
                                    ],
                                    "feature": {},
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "isValid": true,
                                    "lastUpdatedTime": 1557950998146,
                                    "user": "flogo",
                                    "connectorName": "LocalMQTT_1",
                                    "connectorDescription": " "
                                },
                                "topic": "org.teamtibco.bikesensor.data",
                                "retain": false,
                                "qos": 0,
                                "valueType": "String",
                                "stringValue": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['stringValue']",
                                        "type": "expression",
                                        "value": "string.concat(\"{\\\"deviceType\\\":\", string.tostring($flow.deviceType) , \",  \\\"heartRate\\\": \", string.tostring($activity[DecodeHeartRate].result), \"}\")"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "LogHeartrateMsg",
                        "name": "LogHeartrateMsg",
                        "activity": {
                            "ref": "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
                            "settings": {},
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['message']",
                                        "type": "expression",
                                        "value": "string.concat(\"{\\\"deviceType\\\":\", string.tostring($flow.deviceType) , \",  \\\"heartRate\\\": \", string.tostring($activity[DecodeHeartRate].result), \"}\")"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "Return7",
                        "name": "Return7",
                        "activity": {
                            "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
                            "settings": {},
                            "input": {},
                            "output": {}
                        }
                    },
                    {
                        "id": "LogHRBatteryPage",
                        "name": "LogHRBatteryPage",
                        "activity": {
                            "ref": "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
                            "settings": {},
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['message']",
                                        "type": "expression",
                                        "value": "string.concat(\"Heartrate sensor battery status received - page # \", string.substring($flow.message, 1, 1), \"Battery level is low.\")"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "Return15",
                        "name": "Return15",
                        "activity": {
                            "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
                            "settings": {},
                            "input": {},
                            "output": {}
                        }
                    },
                    {
                        "id": "LogNonDataHRPage",
                        "name": "LogNonDataHRPage",
                        "activity": {
                            "ref": "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
                            "settings": {},
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['message']",
                                        "type": "expression",
                                        "value": "string.concat(\"Non-data page - Heart Rate Message = \", $flow.message)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "Return20",
                        "name": "Return20",
                        "activity": {
                            "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
                            "settings": {},
                            "input": {},
                            "output": {}
                        }
                    },
                    {
                        "id": "LogCadencePgNo",
                        "name": "LogCadencePgNo",
                        "activity": {
                            "ref": "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
                            "settings": {},
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['message']",
                                        "type": "expression",
                                        "value": "string.concat(\"Cadence message received - page # \", string.substring($flow.message, 1, 1))"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "Return2",
                        "name": "Return2",
                        "activity": {
                            "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
                            "settings": {},
                            "input": {
                                "mappings": ""
                            },
                            "output": {}
                        }
                    },
                    {
                        "id": "DecodeCadenceTimeValue",
                        "name": "DecodeCadenceTimeValue",
                        "activity": {
                            "ref": "HexConverter/activity/hexConverter",
                            "settings": {},
                            "input": {
                                "hexBytes": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['hexBytes']",
                                        "type": "expression",
                                        "value": "string.concat(string.substring($flow.message, 10, 2),string.substring($flow.message, 8, 2)) "
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "DecodeCrankRevs",
                        "name": "DecodeCrankRevs",
                        "activity": {
                            "ref": "HexConverter/activity/hexConverter",
                            "settings": {},
                            "input": {
                                "hexBytes": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['hexBytes']",
                                        "type": "expression",
                                        "value": "string.concat(string.substring($flow.message, 14, 2),string.substring($flow.message, 12, 2))"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "MQTTPubCadMsg",
                        "name": "MQTTPubCadMsg",
                        "activity": {
                            "ref": "git.tibco.com/git/product/ipaas/wi-mqtt.git/Mqtt/activity/publish",
                            "settings": {},
                            "input": {
                                "Connection": {
                                    "id": "4c5c6570-75a8-11e9-be33-839ec085579d",
                                    "type": "flogo:connector",
                                    "version": "1.0.0",
                                    "name": "connection",
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "MQTT Connector",
                                    "description": "MQTT Connector",
                                    "ref": "git.tibco.com/git/product/ipaas/wi-mqtt.git/Mqtt/connector/connection",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Connection Name",
                                                "visible": true
                                            },
                                            "value": "LocalMQTT_1"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "visible": true
                                            },
                                            "value": "Local MQTT server"
                                        },
                                        {
                                            "name": "broker",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Broker URL",
                                                "visible": true,
                                                "Description": "Enter a broker URL in the form '<protocol>://<host>:<port>'"
                                            },
                                            "value": "tcp://192.168.118.65:1883"
                                        },
                                        {
                                            "name": "user",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Username",
                                                "visible": true,
                                                "Description": "Enter a username if this connection requires one"
                                            },
                                            "value": "dtredinnick"
                                        },
                                        {
                                            "name": "password",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Password",
                                                "visible": true,
                                                "type": "password",
                                                "encryptable": true,
                                                "Description": "Enter a password if this connection requires one"
                                            },
                                            "value": "SECRET:cvkBfHbScVdib4tgt+HHGrTz/tW2SFlgvLarC+XY+H1DegM="
                                        },
                                        {
                                            "name": "encryptionMode",
                                            "type": "string",
                                            "display": {
                                                "name": "Encryption Mode",
                                                "description": "Choose the type of authentication to use"
                                            },
                                            "allowed": [
                                                "None",
                                                "TLS-Cert",
                                                "TLS-ClientAuth"
                                            ],
                                            "value": "None"
                                        },
                                        {
                                            "name": "cacert",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Cacert",
                                                "description": "Select the CA certificate file used to sign the broker's certificate",
                                                "visible": false,
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".crt",
                                                    ".cert",
                                                    ".pem"
                                                ],
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "clientcert",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Client Cert",
                                                "description": "Select the client certificate file for connections requiring client auth",
                                                "visible": false,
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".crt",
                                                    ".cert",
                                                    ".pem"
                                                ],
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "clientkey",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Client Key",
                                                "description": "Select the client key file used for connections requiring client auth",
                                                "visible": false,
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".key",
                                                    ".pem"
                                                ],
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "Tibco",
                                    "key": "Tibco/Mqtt/connector/connection/connector.json",
                                    "display": {
                                        "description": "MQTT Connector",
                                        "category": "Mqtt",
                                        "smallIcon": "icons/mqtt.png",
                                        "largeIcon": "icons/mqtt.png",
                                        "visible": true
                                    },
                                    "actions": [
                                        {
                                            "name": "Save"
                                        }
                                    ],
                                    "feature": {},
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "isValid": true,
                                    "lastUpdatedTime": 1557950998146,
                                    "user": "flogo",
                                    "connectorName": "LocalMQTT_1",
                                    "connectorDescription": " "
                                },
                                "topic": "org.teamtibco.bikesensor.data",
                                "retain": false,
                                "qos": 0,
                                "valueType": "String",
                                "stringValue": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['stringValue']",
                                        "type": "expression",
                                        "value": "string.concat(\"{\\\"deviceType\\\":\", string.tostring($flow.deviceType) , \",  \\\"deviceTime\\\": \",  string.tostring($activity[DecodeCadenceTimeValue].result), \", \\\"crankRevolutions\\\": \", string.tostring($activity[DecodeCrankRevs].result), \"}\")"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "LogCadenceMsg",
                        "name": "LogCadenceMsg",
                        "activity": {
                            "ref": "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
                            "settings": {},
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['message']",
                                        "type": "expression",
                                        "value": "string.concat(\"{\\\"deviceType\\\":\", string.tostring($flow.deviceType) , \",  \\\"deviceTime\\\": \",  string.tostring($activity[DecodeCadenceTimeValue].result), \", \\\"crankRevolutions\\\": \", string.tostring($activity[DecodeCrankRevs].result), \"}\")"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "Return4",
                        "name": "Return4",
                        "activity": {
                            "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
                            "settings": {},
                            "input": {},
                            "output": {}
                        }
                    },
                    {
                        "id": "LogCadenceBatteryPage",
                        "name": "LogCadenceBatteryPage",
                        "activity": {
                            "ref": "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
                            "settings": {},
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['message']",
                                        "type": "expression",
                                        "value": "string.concat(\"Heartrate sensor battery status received - page # \", string.substring($flow.message, 1, 1), \"Battery level is low.\")"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "Return16",
                        "name": "Return16",
                        "activity": {
                            "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
                            "settings": {},
                            "input": {},
                            "output": {}
                        }
                    },
                    {
                        "id": "LogNonDataCadPage",
                        "name": "LogNonDataCadPage",
                        "activity": {
                            "ref": "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
                            "settings": {},
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['message']",
                                        "type": "expression",
                                        "value": "string.concat(\"Non-data page - Cadence Message = \", $flow.message)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "Return21",
                        "name": "Return21",
                        "activity": {
                            "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
                            "settings": {},
                            "input": {},
                            "output": {}
                        }
                    },
                    {
                        "id": "LogSpeedPgNo",
                        "name": "LogSpeedPgNo",
                        "activity": {
                            "ref": "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
                            "settings": {},
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['message']",
                                        "type": "expression",
                                        "value": "string.concat(\"Speed message received - page # \", string.substring($flow.message, 1, 1))"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "Return5",
                        "name": "Return5",
                        "activity": {
                            "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
                            "settings": {},
                            "input": {
                                "mappings": ""
                            },
                            "output": {}
                        }
                    },
                    {
                        "id": "DecodeBikeSpeedEvent",
                        "name": "DecodeBikeSpeedEvent",
                        "activity": {
                            "ref": "HexConverter/activity/hexConverter",
                            "settings": {},
                            "input": {
                                "hexBytes": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['hexBytes']",
                                        "type": "expression",
                                        "value": "string.concat(string.substring($flow.message, 10, 2), string.substring($flow.message, 8, 2) )"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "DecodeWheelRevs",
                        "name": "DecodeWheelRevs",
                        "activity": {
                            "ref": "HexConverter/activity/hexConverter",
                            "settings": {},
                            "input": {
                                "hexBytes": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['hexBytes']",
                                        "type": "expression",
                                        "value": "string.concat(string.substring($flow.message, 14, 2), string.substring($flow.message, 12, 2) )"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "MQTTPubSpeedMsg",
                        "name": "MQTTPubSpeedMsg",
                        "activity": {
                            "ref": "git.tibco.com/git/product/ipaas/wi-mqtt.git/Mqtt/activity/publish",
                            "settings": {},
                            "input": {
                                "Connection": {
                                    "id": "4c5c6570-75a8-11e9-be33-839ec085579d",
                                    "type": "flogo:connector",
                                    "version": "1.0.0",
                                    "name": "connection",
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "MQTT Connector",
                                    "description": "MQTT Connector",
                                    "ref": "git.tibco.com/git/product/ipaas/wi-mqtt.git/Mqtt/connector/connection",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Connection Name",
                                                "visible": true
                                            },
                                            "value": "LocalMQTT_1"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "visible": true
                                            },
                                            "value": "Local MQTT server"
                                        },
                                        {
                                            "name": "broker",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Broker URL",
                                                "visible": true,
                                                "Description": "Enter a broker URL in the form '<protocol>://<host>:<port>'"
                                            },
                                            "value": "tcp://192.168.118.65:1883"
                                        },
                                        {
                                            "name": "user",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Username",
                                                "visible": true,
                                                "Description": "Enter a username if this connection requires one"
                                            },
                                            "value": "dtredinnick"
                                        },
                                        {
                                            "name": "password",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Password",
                                                "visible": true,
                                                "type": "password",
                                                "encryptable": true,
                                                "Description": "Enter a password if this connection requires one"
                                            },
                                            "value": "SECRET:ZgKAV5YBX4GVocN5l0ts/TsI8hd4Ux8ZksJdDoUTmhEzKGM="
                                        },
                                        {
                                            "name": "encryptionMode",
                                            "type": "string",
                                            "display": {
                                                "name": "Encryption Mode",
                                                "description": "Choose the type of authentication to use"
                                            },
                                            "allowed": [
                                                "None",
                                                "TLS-Cert",
                                                "TLS-ClientAuth"
                                            ],
                                            "value": "None"
                                        },
                                        {
                                            "name": "cacert",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Cacert",
                                                "description": "Select the CA certificate file used to sign the broker's certificate",
                                                "visible": false,
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".crt",
                                                    ".cert",
                                                    ".pem"
                                                ],
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "clientcert",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Client Cert",
                                                "description": "Select the client certificate file for connections requiring client auth",
                                                "visible": false,
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".crt",
                                                    ".cert",
                                                    ".pem"
                                                ],
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "clientkey",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Client Key",
                                                "description": "Select the client key file used for connections requiring client auth",
                                                "visible": false,
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".key",
                                                    ".pem"
                                                ],
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "Tibco",
                                    "key": "Tibco/Mqtt/connector/connection/connector.json",
                                    "display": {
                                        "description": "MQTT Connector",
                                        "category": "Mqtt",
                                        "smallIcon": "icons/mqtt.png",
                                        "largeIcon": "icons/mqtt.png",
                                        "visible": true
                                    },
                                    "actions": [
                                        {
                                            "name": "Save"
                                        }
                                    ],
                                    "feature": {},
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "isValid": true,
                                    "lastUpdatedTime": 1557950998146,
                                    "user": "flogo",
                                    "connectorName": "LocalMQTT_1",
                                    "connectorDescription": " "
                                },
                                "topic": "org.teamtibco.bikesensor.data",
                                "retain": false,
                                "qos": 0,
                                "valueType": "String",
                                "stringValue": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['stringValue']",
                                        "type": "expression",
                                        "value": "string.concat(\"{\\\"deviceType\\\":\", string.tostring($flow.deviceType) , \",  \\\"deviceTime\\\": \",  string.tostring($activity[DecodeBikeSpeedEvent].result), \", \\\"wheelRevolutions\\\": \", string.tostring($activity[DecodeWheelRevs].result), \"}\")"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "LogSpeedMsg",
                        "name": "LogSpeedMsg",
                        "activity": {
                            "ref": "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
                            "settings": {},
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['message']",
                                        "type": "expression",
                                        "value": "string.concat(\"{\\\"deviceType\\\":\", string.tostring($flow.deviceType) , \",  \\\"deviceTime\\\": \",  string.tostring($activity[DecodeBikeSpeedEvent].result), \", \\\"wheelRevolutions\\\": \", string.tostring($activity[DecodeWheelRevs].result), \"}\")"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "Return6",
                        "name": "Return6",
                        "activity": {
                            "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
                            "settings": {},
                            "input": {
                                "mappings": ""
                            },
                            "output": {}
                        }
                    },
                    {
                        "id": "LogSpeedBatteryPage",
                        "name": "LogSpeedBatteryPage",
                        "activity": {
                            "ref": "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
                            "settings": {},
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['message']",
                                        "type": "expression",
                                        "value": "string.concat(\"Speed sensor battery status received - page # \", string.substring($flow.message, 1, 1), \"Battery level is low.\")"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "Return17",
                        "name": "Return17",
                        "activity": {
                            "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
                            "settings": {},
                            "input": {},
                            "output": {}
                        }
                    },
                    {
                        "id": "LogNonDataSpeedPage",
                        "name": "LogNonDataSpeedPage",
                        "activity": {
                            "ref": "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
                            "settings": {},
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['message']",
                                        "type": "expression",
                                        "value": "string.concat(\"Non-data page - Speed Message = \", $flow.message)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "Return22",
                        "name": "Return22",
                        "activity": {
                            "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
                            "settings": {},
                            "input": {},
                            "output": {}
                        }
                    },
                    {
                        "id": "LogPowerPgNo",
                        "name": "LogPowerPgNo",
                        "activity": {
                            "ref": "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
                            "settings": {},
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['message']",
                                        "type": "expression",
                                        "value": "string.concat(\"Power message received - page # \", string.substring($flow.message, 0, 2))"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "Return8",
                        "name": "Return8",
                        "activity": {
                            "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
                            "settings": {},
                            "input": {},
                            "output": {}
                        }
                    },
                    {
                        "id": "DecodeAccPower",
                        "name": "DecodeAccPower",
                        "activity": {
                            "ref": "HexConverter/activity/hexConverter",
                            "settings": {},
                            "input": {
                                "hexBytes": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['hexBytes']",
                                        "type": "expression",
                                        "value": "string.concat(string.substring($flow.message, 10, 2), string.substring($flow.message, 8, 2))"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "DecodeEventCountPower",
                        "name": "DecodeEventCountPower",
                        "activity": {
                            "ref": "HexConverter/activity/hexConverter",
                            "settings": {},
                            "input": {
                                "hexBytes": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['hexBytes']",
                                        "type": "expression",
                                        "value": "string.substring($flow.message, 1, 2)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "MQTTPubPowerMsg",
                        "name": "MQTTPubPowerMsg",
                        "activity": {
                            "ref": "git.tibco.com/git/product/ipaas/wi-mqtt.git/Mqtt/activity/publish",
                            "settings": {},
                            "input": {
                                "Connection": {
                                    "id": "4c5c6570-75a8-11e9-be33-839ec085579d",
                                    "type": "flogo:connector",
                                    "version": "1.0.0",
                                    "name": "connection",
                                    "inputMappings": {},
                                    "outputMappings": {},
                                    "iteratorMappings": {},
                                    "title": "MQTT Connector",
                                    "description": "MQTT Connector",
                                    "ref": "git.tibco.com/git/product/ipaas/wi-mqtt.git/Mqtt/connector/connection",
                                    "settings": [
                                        {
                                            "name": "name",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Connection Name",
                                                "visible": true
                                            },
                                            "value": "LocalMQTT_1"
                                        },
                                        {
                                            "name": "description",
                                            "type": "string",
                                            "display": {
                                                "name": "Description",
                                                "visible": true
                                            },
                                            "value": "Local MQTT server"
                                        },
                                        {
                                            "name": "broker",
                                            "type": "string",
                                            "required": true,
                                            "display": {
                                                "name": "Broker URL",
                                                "visible": true,
                                                "Description": "Enter a broker URL in the form '<protocol>://<host>:<port>'"
                                            },
                                            "value": "tcp://192.168.118.65:1883"
                                        },
                                        {
                                            "name": "user",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Username",
                                                "visible": true,
                                                "Description": "Enter a username if this connection requires one"
                                            },
                                            "value": "dtredinnick"
                                        },
                                        {
                                            "name": "password",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Password",
                                                "visible": true,
                                                "type": "password",
                                                "encryptable": true,
                                                "Description": "Enter a password if this connection requires one"
                                            },
                                            "value": "SECRET:k0l4ArTwluwSUKWECBrWJdSyqbDDTOwHQTAhn9Ptem5+JCI="
                                        },
                                        {
                                            "name": "encryptionMode",
                                            "type": "string",
                                            "display": {
                                                "name": "Encryption Mode",
                                                "description": "Choose the type of authentication to use"
                                            },
                                            "allowed": [
                                                "None",
                                                "TLS-Cert",
                                                "TLS-ClientAuth"
                                            ],
                                            "value": "None"
                                        },
                                        {
                                            "name": "cacert",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Cacert",
                                                "description": "Select the CA certificate file used to sign the broker's certificate",
                                                "visible": false,
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".crt",
                                                    ".cert",
                                                    ".pem"
                                                ],
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "clientcert",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Client Cert",
                                                "description": "Select the client certificate file for connections requiring client auth",
                                                "visible": false,
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".crt",
                                                    ".cert",
                                                    ".pem"
                                                ],
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        },
                                        {
                                            "name": "clientkey",
                                            "type": "string",
                                            "required": false,
                                            "display": {
                                                "name": "Client Key",
                                                "description": "Select the client key file used for connections requiring client auth",
                                                "visible": false,
                                                "type": "fileselector",
                                                "fileExtensions": [
                                                    ".key",
                                                    ".pem"
                                                ],
                                                "readonly": false,
                                                "valid": true
                                            },
                                            "value": ""
                                        }
                                    ],
                                    "outputs": [],
                                    "inputs": [],
                                    "handler": {
                                        "settings": []
                                    },
                                    "reply": [],
                                    "s3Prefix": "Tibco",
                                    "key": "Tibco/Mqtt/connector/connection/connector.json",
                                    "display": {
                                        "description": "MQTT Connector",
                                        "category": "Mqtt",
                                        "smallIcon": "icons/mqtt.png",
                                        "largeIcon": "icons/mqtt.png",
                                        "visible": true
                                    },
                                    "actions": [
                                        {
                                            "name": "Save"
                                        }
                                    ],
                                    "feature": {},
                                    "propertyMap": {},
                                    "keyfield": "name",
                                    "isValid": true,
                                    "lastUpdatedTime": 1557950998146,
                                    "user": "flogo",
                                    "connectorName": "LocalMQTT_1",
                                    "connectorDescription": " "
                                },
                                "topic": "org.teamtibco.bikesensor.data",
                                "retain": false,
                                "qos": 0,
                                "valueType": "String",
                                "stringValue": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['stringValue']",
                                        "type": "expression",
                                        "value": "string.concat(\"{\\\"deviceType\\\":\", string.tostring($flow.deviceType) ,  \",  \\\"deviceTime\\\": \",  string.tostring($activity[DecodeEventCountPower].result), \",  \\\"accPower\\\": \",  string.tostring($activity[DecodeAccPower].result), \"}\")"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "LogPowerMsg",
                        "name": "LogPowerMsg",
                        "activity": {
                            "ref": "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
                            "settings": {},
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['message']",
                                        "type": "expression",
                                        "value": "string.concat(\"{\\\"deviceType\\\":\", string.tostring($flow.deviceType) ,  \",  \\\"deviceTime\\\": \",  string.tostring($activity[DecodeEventCountPower].result), \",  \\\"accPower\\\": \",  string.tostring($activity[DecodeAccPower].result), \"}\")"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "Return18",
                        "name": "Return18",
                        "activity": {
                            "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
                            "settings": {},
                            "input": {},
                            "output": {}
                        }
                    },
                    {
                        "id": "LogPowerBatteryPage",
                        "name": "LogPowerBatteryPage",
                        "activity": {
                            "ref": "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
                            "settings": {},
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['message']",
                                        "type": "expression",
                                        "value": "string.concat(\"Power sensor battery status received - page # \", string.substring($flow.message, 1, 1), \"Battery level is low.\")"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "Return19",
                        "name": "Return19",
                        "activity": {
                            "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
                            "settings": {},
                            "input": {},
                            "output": {}
                        }
                    },
                    {
                        "id": "LogNonDataPowerPage",
                        "name": "LogNonDataPowerPage",
                        "activity": {
                            "ref": "git.tibco.com/git/product/ipaas/wi-contrib.git/contributions/General/activity/log",
                            "settings": {},
                            "input": {
                                "Log Level": "INFO",
                                "flowInfo": false,
                                "message": ""
                            },
                            "output": {},
                            "mappings": {
                                "input": [
                                    {
                                        "mapTo": "$INPUT['message']",
                                        "type": "expression",
                                        "value": "string.concat(\"Non-data page - Power Message = \", $flow.message)"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "id": "Return23",
                        "name": "Return23",
                        "activity": {
                            "ref": "github.com/TIBCOSoftware/flogo-contrib/activity/actreturn",
                            "settings": {},
                            "input": {},
                            "output": {}
                        }
                    }
                ],
                "links": [
                    {
                        "id": 1,
                        "from": "LogMessageAntMsg",
                        "to": "Return",
                        "type": "default"
                    },
                    {
                        "id": 2,
                        "from": "LogMessageAntMsg",
                        "to": "LogHeartratePgNo",
                        "type": "expression",
                        "value": "$flow.deviceType == 120"
                    },
                    {
                        "id": 3,
                        "from": "LogHeartratePgNo",
                        "to": "Return1",
                        "type": "default"
                    },
                    {
                        "id": 4,
                        "from": "LogHeartratePgNo",
                        "to": "DecodeHeartRate",
                        "type": "expression",
                        "value": "string.substring($flow.message, 1, 1) == 4"
                    },
                    {
                        "id": 5,
                        "from": "DecodeHeartRate",
                        "to": "MQTTPubHRMsg",
                        "type": "default"
                    },
                    {
                        "id": 6,
                        "from": "MQTTPubHRMsg",
                        "to": "LogHeartrateMsg",
                        "type": "default"
                    },
                    {
                        "id": 7,
                        "from": "LogHeartrateMsg",
                        "to": "Return7",
                        "type": "default"
                    },
                    {
                        "id": 8,
                        "from": "LogHeartratePgNo",
                        "to": "LogHRBatteryPage",
                        "type": "expression",
                        "value": "(string.substring($flow.message, 1, 1) == \"7\" ) && (string.substring($flow.message, 7, 1) == \"4\")"
                    },
                    {
                        "id": 9,
                        "from": "LogHRBatteryPage",
                        "to": "Return15",
                        "type": "default"
                    },
                    {
                        "id": 10,
                        "from": "LogHeartratePgNo",
                        "to": "LogNonDataHRPage",
                        "type": "expression",
                        "value": "(string.substring($flow.message, 1, 1) != \"4\") && (string.substring($flow.message, 1, 1) != \"7\")"
                    },
                    {
                        "id": 11,
                        "from": "LogNonDataHRPage",
                        "to": "Return20",
                        "type": "default"
                    },
                    {
                        "id": 12,
                        "from": "LogMessageAntMsg",
                        "to": "LogCadencePgNo",
                        "type": "expression",
                        "value": "$flow.deviceType == 122"
                    },
                    {
                        "id": 13,
                        "from": "LogCadencePgNo",
                        "to": "Return2",
                        "type": "default"
                    },
                    {
                        "id": 14,
                        "from": "LogCadencePgNo",
                        "to": "DecodeCadenceTimeValue",
                        "type": "expression",
                        "value": "string.substring($flow.message, 1, 1) == 0"
                    },
                    {
                        "id": 15,
                        "from": "DecodeCadenceTimeValue",
                        "to": "DecodeCrankRevs",
                        "type": "default"
                    },
                    {
                        "id": 16,
                        "from": "DecodeCrankRevs",
                        "to": "MQTTPubCadMsg",
                        "type": "default"
                    },
                    {
                        "id": 17,
                        "from": "MQTTPubCadMsg",
                        "to": "LogCadenceMsg",
                        "type": "default"
                    },
                    {
                        "id": 18,
                        "from": "LogCadenceMsg",
                        "to": "Return4",
                        "type": "default"
                    },
                    {
                        "id": 19,
                        "from": "LogCadencePgNo",
                        "to": "LogCadenceBatteryPage",
                        "type": "expression",
                        "value": "(string.substring($flow.message, 1, 1) == \"4\") && (string.substring($flow.message, 7, 1) == \"4\")"
                    },
                    {
                        "id": 20,
                        "from": "LogCadenceBatteryPage",
                        "to": "Return16",
                        "type": "default"
                    },
                    {
                        "id": 21,
                        "from": "LogCadencePgNo",
                        "to": "LogNonDataCadPage",
                        "type": "expression",
                        "value": "(string.substring($flow.message, 1, 1) != \"0\") && (string.substring($flow.message, 1, 1) != \"4\")"
                    },
                    {
                        "id": 22,
                        "from": "LogNonDataCadPage",
                        "to": "Return21",
                        "type": "default"
                    },
                    {
                        "id": 23,
                        "from": "LogMessageAntMsg",
                        "to": "LogSpeedPgNo",
                        "type": "expression",
                        "value": "$flow.deviceType == 123"
                    },
                    {
                        "id": 24,
                        "from": "LogSpeedPgNo",
                        "to": "Return5",
                        "type": "default"
                    },
                    {
                        "id": 25,
                        "from": "LogSpeedPgNo",
                        "to": "DecodeBikeSpeedEvent",
                        "type": "expression",
                        "value": "string.substring($flow.message, 1, 1) == 5"
                    },
                    {
                        "id": 26,
                        "from": "DecodeBikeSpeedEvent",
                        "to": "DecodeWheelRevs",
                        "type": "default"
                    },
                    {
                        "id": 27,
                        "from": "DecodeWheelRevs",
                        "to": "MQTTPubSpeedMsg",
                        "type": "default"
                    },
                    {
                        "id": 28,
                        "from": "MQTTPubSpeedMsg",
                        "to": "LogSpeedMsg",
                        "type": "default"
                    },
                    {
                        "id": 29,
                        "from": "LogSpeedMsg",
                        "to": "Return6",
                        "type": "default"
                    },
                    {
                        "id": 30,
                        "from": "LogSpeedPgNo",
                        "to": "LogSpeedBatteryPage",
                        "type": "expression",
                        "value": "(string.substring($flow.message, 1, 1) != \"5\") && (string.substring($flow.message, 1, 1) != \"4\")"
                    },
                    {
                        "id": 31,
                        "from": "LogSpeedBatteryPage",
                        "to": "Return17",
                        "type": "default"
                    },
                    {
                        "id": 32,
                        "from": "LogSpeedPgNo",
                        "to": "LogNonDataSpeedPage",
                        "type": "expression",
                        "value": "(string.substring($flow.message, 1, 1) != \"4\") && (string.substring($flow.message, 1, 1) != \"5\")"
                    },
                    {
                        "id": 33,
                        "from": "LogNonDataSpeedPage",
                        "to": "Return22",
                        "type": "default"
                    },
                    {
                        "id": 34,
                        "from": "LogMessageAntMsg",
                        "to": "LogPowerPgNo",
                        "type": "expression",
                        "value": "$flow.deviceType == 11"
                    },
                    {
                        "id": 35,
                        "from": "LogPowerPgNo",
                        "to": "Return8",
                        "type": "default"
                    },
                    {
                        "id": 36,
                        "from": "LogPowerPgNo",
                        "to": "DecodeAccPower",
                        "type": "expression",
                        "value": "string.substring($flow.message, 0, 2) == \"10\""
                    },
                    {
                        "id": 37,
                        "from": "DecodeAccPower",
                        "to": "DecodeEventCountPower",
                        "type": "default"
                    },
                    {
                        "id": 38,
                        "from": "DecodeEventCountPower",
                        "to": "MQTTPubPowerMsg",
                        "type": "default"
                    },
                    {
                        "id": 39,
                        "from": "MQTTPubPowerMsg",
                        "to": "LogPowerMsg",
                        "type": "default"
                    },
                    {
                        "id": 40,
                        "from": "LogPowerMsg",
                        "to": "Return18",
                        "type": "default"
                    },
                    {
                        "id": 41,
                        "from": "LogPowerPgNo",
                        "to": "LogPowerBatteryPage",
                        "type": "expression",
                        "value": "(string.substring($flow.message, 0, 2) == \"52\") && (string.substring($flow.message, 15, 1) == \"4\")"
                    },
                    {
                        "id": 42,
                        "from": "LogPowerBatteryPage",
                        "to": "Return19",
                        "type": "default"
                    },
                    {
                        "id": 43,
                        "from": "LogPowerPgNo",
                        "to": "LogNonDataPowerPage",
                        "type": "expression",
                        "value": "(string.substring($flow.message, 0, 2) != \"10\") && (string.substring($flow.message, 0, 2) != \"52\")"
                    },
                    {
                        "id": 44,
                        "from": "LogNonDataPowerPage",
                        "to": "Return23",
                        "type": "default"
                    }
                ],
                "metadata": {
                    "input": [
                        {
                            "name": "deviceType",
                            "type": "number"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        }
                    ],
                    "output": [
                        {
                            "name": "deviceType",
                            "type": "number"
                        },
                        {
                            "name": "message",
                            "type": "string"
                        }
                    ],
                    "fe_metadata": {
                        "input": "{\n    \"deviceType\": 120,\n    \"message\": \"04FF63005C004A59\"\n}",
                        "output": "{\n    \"deviceType\": 120,\n    \"message\": \"04FF63005C004A59\"\n}"
                    }
                }
            }
        }
    ],
    "triggers": [
        {
            "ref": "git.tibco.com/git/product/ipaas/wi-mqtt.git/Mqtt/trigger/subscribe",
            "name": "MQTTSubscriber",
            "description": "",
            "settings": {
                "mqttConnection": {
                    "id": "4c5c6570-75a8-11e9-be33-839ec085579d",
                    "type": "flogo:connector",
                    "version": "1.0.0",
                    "name": "connection",
                    "inputMappings": {},
                    "outputMappings": {},
                    "iteratorMappings": {},
                    "title": "MQTT Connector",
                    "description": "MQTT Connector",
                    "ref": "git.tibco.com/git/product/ipaas/wi-mqtt.git/Mqtt/connector/connection",
                    "settings": [
                        {
                            "name": "name",
                            "type": "string",
                            "required": true,
                            "display": {
                                "name": "Connection Name",
                                "visible": true
                            },
                            "value": "LocalMQTT_1"
                        },
                        {
                            "name": "description",
                            "type": "string",
                            "display": {
                                "name": "Description",
                                "visible": true
                            },
                            "value": "Local MQTT server"
                        },
                        {
                            "name": "broker",
                            "type": "string",
                            "required": true,
                            "display": {
                                "name": "Broker URL",
                                "visible": true,
                                "Description": "Enter a broker URL in the form '<protocol>://<host>:<port>'"
                            },
                            "value": "tcp://192.168.118.65:1883"
                        },
                        {
                            "name": "user",
                            "type": "string",
                            "required": false,
                            "display": {
                                "name": "Username",
                                "visible": true,
                                "Description": "Enter a username if this connection requires one"
                            },
                            "value": "dtredinnick"
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "required": false,
                            "display": {
                                "name": "Password",
                                "visible": true,
                                "type": "password",
                                "encryptable": true,
                                "Description": "Enter a password if this connection requires one"
                            },
                            "value": "SECRET:Tj16XPXP25ud80bFnWm8vJVvW4HPyDOjphbZmN2TrEF2yDE="
                        },
                        {
                            "name": "encryptionMode",
                            "type": "string",
                            "display": {
                                "name": "Encryption Mode",
                                "description": "Choose the type of authentication to use"
                            },
                            "allowed": [
                                "None",
                                "TLS-Cert",
                                "TLS-ClientAuth"
                            ],
                            "value": "None"
                        },
                        {
                            "name": "cacert",
                            "type": "string",
                            "required": false,
                            "display": {
                                "name": "Cacert",
                                "description": "Select the CA certificate file used to sign the broker's certificate",
                                "visible": false,
                                "type": "fileselector",
                                "fileExtensions": [
                                    ".crt",
                                    ".cert",
                                    ".pem"
                                ],
                                "readonly": false,
                                "valid": true
                            },
                            "value": ""
                        },
                        {
                            "name": "clientcert",
                            "type": "string",
                            "required": false,
                            "display": {
                                "name": "Client Cert",
                                "description": "Select the client certificate file for connections requiring client auth",
                                "visible": false,
                                "type": "fileselector",
                                "fileExtensions": [
                                    ".crt",
                                    ".cert",
                                    ".pem"
                                ],
                                "readonly": false,
                                "valid": true
                            },
                            "value": ""
                        },
                        {
                            "name": "clientkey",
                            "type": "string",
                            "required": false,
                            "display": {
                                "name": "Client Key",
                                "description": "Select the client key file used for connections requiring client auth",
                                "visible": false,
                                "type": "fileselector",
                                "fileExtensions": [
                                    ".key",
                                    ".pem"
                                ],
                                "readonly": false,
                                "valid": true
                            },
                            "value": ""
                        }
                    ],
                    "outputs": [],
                    "inputs": [],
                    "handler": {
                        "settings": []
                    },
                    "reply": [],
                    "s3Prefix": "Tibco",
                    "key": "Tibco/Mqtt/connector/connection/connector.json",
                    "display": {
                        "description": "MQTT Connector",
                        "category": "Mqtt",
                        "smallIcon": "icons/mqtt.png",
                        "largeIcon": "icons/mqtt.png",
                        "visible": true
                    },
                    "actions": [
                        {
                            "name": "Save"
                        }
                    ],
                    "feature": {},
                    "propertyMap": {},
                    "keyfield": "name",
                    "isValid": true,
                    "lastUpdatedTime": 1557950998146,
                    "user": "flogo",
                    "connectorName": "LocalMQTT_1",
                    "connectorDescription": " "
                }
            },
            "id": "MQTTSubscriber",
            "handlers": [
                {
                    "description": "",
                    "settings": {
                        "topic": "org.teamtibco.bikesensor.rawdata",
                        "qos": 0,
                        "valueType": "String",
                        "showwill": false,
                        "will": "",
                        "willtopic": "",
                        "willqos": 0,
                        "willretain": false
                    },
                    "outputs": {
                        "topic": "",
                        "retained": false,
                        "stringValue": ""
                    },
                    "action": {
                        "ref": "github.com/TIBCOSoftware/flogo-contrib/action/flow",
                        "data": {
                            "flowURI": "res://flow:AntSensorHandler"
                        },
                        "mappings": {
                            "input": [
                                {
                                    "mapTo": "$INPUT['deviceType']",
                                    "type": "expression",
                                    "value": "number.int64(string.substringAfter(string.substringBefore($.stringValue, \",\" ), \":\"))"
                                },
                                {
                                    "mapTo": "$INPUT['message']",
                                    "type": "expression",
                                    "value": "string.substringBefore(string.substringAfter(string.substringAfter($.stringValue, \",\" ), \":\\\"\"), \"\\\"\")"
                                }
                            ],
                            "output": []
                        }
                    }
                }
            ]
        }
    ],
    "properties": [
        {
            "name": "MQTT.URL",
            "type": "string",
            "value": "tcp://localhost:1883"
        },
        {
            "name": "MQTT.userd",
            "type": "string",
            "value": "dtredinnick"
        },
        {
            "name": "MQTT.password",
            "type": "string",
            "value": "SECRET:1yc43g1RFI2Ku3GyipbE6g=="
        }
    ],
    "contrib": "W3sicmVmIjoiZ2l0LnRpYmNvLmNvbS9naXQvcHJvZHVjdC9pcGFhcy93aS1jb250cmliLmdpdC9jb250cmlidXRpb25zL0dlbmVyYWwiLCJzM2xvY2F0aW9uIjoiVGliY28vR2VuZXJhbCJ9LHsicmVmIjoiSGV4Q29udmVydGVyIiwiczNsb2NhdGlvbiI6IntVU0VSSUR9L0hleENvbnZlcnRlciJ9LHsicmVmIjoiZ2l0LnRpYmNvLmNvbS9naXQvcHJvZHVjdC9pcGFhcy93aS1tcXR0LmdpdC9NcXR0IiwiczNsb2NhdGlvbiI6IlRpYmNvL01xdHQifV0=",
    "fe_metadata": "UEsDBAoAAAAIAJMEsE6rqSRGFQAAABMAAAAIAAAAYXBwLmpzb26rViopykxPTy1yy8kvL1ayio6tBQBQSwECFAAKAAAACACTBLBOq6kkRhUAAAATAAAACAAAAAAAAAAAAAAAAAAAAAAAYXBwLmpzb25QSwUGAAAAAAEAAQA2AAAAOwAAAAAA"
}